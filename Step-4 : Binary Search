
1. Binary Search

 public:
    int binarysearch(int arr[], int n, int k) {
        int l=0,r=n-1;
        int mid = 0;
        while(l<=r){
            mid = l + (r-l)/2;
            if(arr[mid] == k){
                return mid;
            }
            else if(arr[mid]>k){
                r=mid-1;
            }
            else {
                l=mid+1;
            }
        }
        return -1;
    }

2. Search Insert Position



//User function Template for Java

class Solution
{
    static int searchInsertK(int Arr[], int N, int k)
    {
        // code here
        int s=0;
       int e=N-1;
       while(s<=e){
           int mid=s+(e-s)/2;
           if(Arr[mid]==k){
               return mid;
           }
           else if(Arr[mid]>k){
               e=mid-1;
           }
           else{
               s=mid+1;
           }
       }
       return s;
    }
}

3. Check if Input array is sorted
bool arraySortedOrNot(int arr[], int n) {

        int i=0;

        

        while(i<n-1)

        {

            if(arr[i]>arr[i+1])

            return 0;

            else

            i++;

        }

        return 1;

    }
